name: Azure Create/Update infra - Terragrunt/Terraform

on:
  workflow_dispatch:
    inputs:
      terragrunt-choice:
        type: choice
        description: Select if you want to create or destroy infrastructure
        options:
        - create
        - destroy
      resource-choice:
        type: choice
        description: Select the Azure solution
        options:
        - storage-account
        - static-website
        - aks
        - all
    secrets:
      subscription_id:
        required: true

env:
  tf_version: '1.2.7'
  tg_version: '0.38.9'
  tg_working_dir: 'iac/terragrunt/subscription-sample/dev/eastus/'
  env: 'dev'

permissions:
      id-token: write
      contents: read

jobs:
  update-infra:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          terraform_version: ${{ env.tf_version }}

      - name: 'Setup Terragrunt'
        uses: eLco/setup-terragrunt@v1.0.2
        with:
          terragrunt_version: ${{ env.tg_version }}

      - name: 'terragrunt run-all'
        if: inputs.resource-choice == 'all' && inputs.terragrunt-choice == 'create'
        working-directory: ${{ env.tg_working_dir }}
        run: |
          terragrunt run-all apply --terragrunt-non-interactive

      - name: 'terragrunt destroy-all'
        if: inputs.resource-choice == 'all' && inputs.terragrunt-choice == 'destroy'
        working-directory: ${{ env.tg_working_dir }}
        run: |
          terragrunt run-all destroy --terragrunt-non-interactive

      - name: 'Create/Update ${{ inputs.resource-choice }} resources'
        if: inputs.resource-choice != 'all' && inputs.terragrunt-choice == 'create'
        working-directory: ${{ env.tg_working_dir }}
        run: |
          terragrunt apply -auto-approve --terragrunt-working-dir ${{ inputs.resource-choice }}

      - name: 'Destroy ${{ inputs.resource-choice }} resources'
        if: inputs.resource-choice != 'all' && inputs.terragrunt-choice == 'destroy'
        working-directory: ${{ env.tg_working_dir }}
        run: |
          terragrunt destroy -auto-approve --terragrunt-working-dir ${{ inputs.resource-choice }}
